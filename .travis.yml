language: python
sudo: false
dist: xenial
git:
  depth: 9999999
services:
- docker
addons:
  apt:
    packages:
      - libsnappy-dev
cache: pip
before_cache:
  - chown -R travis:travis $HOME/.cache/pip
stages:
  - style
  - test
  - name: deploy
    # require any tag name to deploy
    if: tag =~ .*
_install: &_install
  - pip install --upgrade pip cython codecov
  - pip install -e .[test,plot]
_coverage: &_coverage
  - SCRIPT="coverage run --concurrency=multiprocessing -m unittest discover
            && coverage combine
            && git clone --single-branch --depth 1 git://github.com/facebook/react
            && find react -name '*.js' | xargs python3 -m lookout.style.format.langs -o /tmp/test"
_deploy: &_deploy
  provider: script
  script: twine upload dist/*py3-none-any* -u $PYPI_LOGIN -p $PYPI_PASS
  skip_cleanup: true
  on:
    tags: true
matrix:
  include:
    - stage: style
      python: 3.7
      env: SCRIPT="flake8 . --config .flake8-code
        && pylint lookout
        && flake8 . --config .flake8-doc
        && (! grep -R /tmp lookout/style/*/tests)
        && rm -rf lookout/core/server
        && cd doc && make
        && cd ../lookout/style/format/visualizer && npm run build"
      install:
      - pip install -r doc/requirements.txt -r requirements-lint.txt
      - cd lookout/style/format/visualizer && npm install && cd -
    - stage: test
      - python: 3.5
        env: *_coverage
        install: *_install
# We test python 3.6 inside docker.
#      - python: 3.6
#        env: *_coverage
#        install: *_install
      - python: 3.6
        env: SCRIPT="make docker-build && make docker-test"
      - python: 3.7
        env: *_coverage
        install: *_install
        after_success:
          - codecov
    - stage: deploy
      python: 3.5
      install:
        - pip3 install --upgrade pip
        - pip3 install twine
      before_script: skip
      script:
        - python3 setup.py bdist_wheel
      deploy: *_deploy
  fast_finish: true
before_script:
  - make bblfsh-start
script:
  - (eval "$SCRIPT")
notifications:
  email: false
