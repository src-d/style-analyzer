# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gopkg.in/bblfsh/sdk.v1/uast/generated.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from lookout.core.api.github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='gopkg.in/bblfsh/sdk.v1/uast/generated.proto',
  package='gopkg.in.bblfsh.sdk.v1.uast',
  syntax='proto3',
  serialized_pb=_b('\n+gopkg.in/bblfsh/sdk.v1/uast/generated.proto\x12\x1bgopkg.in.bblfsh.sdk.v1.uast\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\"\x97\x03\n\x04Node\x12\x15\n\rinternal_type\x18\x01 \x01(\t\x12\x45\n\nproperties\x18\x02 \x03(\x0b\x32\x31.gopkg.in.bblfsh.sdk.v1.uast.Node.PropertiesEntry\x12\x33\n\x08\x63hildren\x18\x03 \x03(\x0b\x32!.gopkg.in.bblfsh.sdk.v1.uast.Node\x12\r\n\x05token\x18\x04 \x01(\t\x12=\n\x0estart_position\x18\x05 \x01(\x0b\x32%.gopkg.in.bblfsh.sdk.v1.uast.Position\x12;\n\x0c\x65nd_position\x18\x06 \x01(\x0b\x32%.gopkg.in.bblfsh.sdk.v1.uast.Position\x12\x30\n\x05roles\x18\x07 \x03(\x0e\x32!.gopkg.in.bblfsh.sdk.v1.uast.Role\x1a\x31\n\x0fPropertiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01:\x0c\x88\xa0\x1f\x00\x98\xa0\x1f\x00\xf0\xa1\x1f\x00\"?\n\x08Position\x12\x0e\n\x06offset\x18\x01 \x01(\r\x12\x0c\n\x04line\x18\x02 \x01(\r\x12\x0b\n\x03\x63ol\x18\x03 \x01(\r:\x08\x88\xa0\x1f\x00\xf0\xa1\x1f\x00*\x9a\x18\n\x04Role\x12\x18\n\x07INVALID\x10\x00\x1a\x0b\x8a\x9d \x07Invalid\x12\x1e\n\nIDENTIFIER\x10\x01\x1a\x0e\x8a\x9d \nIdentifier\x12\x1c\n\tQUALIFIED\x10\x02\x1a\r\x8a\x9d \tQualified\x12\x1a\n\x08OPERATOR\x10\x03\x1a\x0c\x8a\x9d \x08Operator\x12\x16\n\x06\x42INARY\x10\x04\x1a\n\x8a\x9d \x06\x42inary\x12\x14\n\x05UNARY\x10\x05\x1a\t\x8a\x9d \x05Unary\x12\x12\n\x04LEFT\x10\x06\x1a\x08\x8a\x9d \x04Left\x12\x14\n\x05RIGHT\x10\x07\x1a\t\x8a\x9d \x05Right\x12\x14\n\x05INFIX\x10\x08\x1a\t\x8a\x9d \x05Infix\x12\x18\n\x07POSTFIX\x10\t\x1a\x0b\x8a\x9d \x07Postfix\x12\x18\n\x07\x42ITWISE\x10\n\x1a\x0b\x8a\x9d \x07\x42itwise\x12\x18\n\x07\x42OOLEAN\x10\x0b\x1a\x0b\x8a\x9d \x07\x42oolean\x12\x1a\n\x08UNSIGNED\x10\x0c\x1a\x0c\x8a\x9d \x08Unsigned\x12\x1d\n\nLEFT_SHIFT\x10\r\x1a\r\x8a\x9d \tLeftShift\x12\x1f\n\x0bRIGHT_SHIFT\x10\x0e\x1a\x0e\x8a\x9d \nRightShift\x12\x0e\n\x02OR\x10\x0f\x1a\x06\x8a\x9d \x02Or\x12\x10\n\x03XOR\x10\x10\x1a\x07\x8a\x9d \x03Xor\x12\x10\n\x03\x41ND\x10\x11\x1a\x07\x8a\x9d \x03\x41nd\x12\x1e\n\nEXPRESSION\x10\x12\x1a\x0e\x8a\x9d \nExpression\x12\x1c\n\tSTATEMENT\x10\x13\x1a\r\x8a\x9d \tStatement\x12\x14\n\x05\x45QUAL\x10\x14\x1a\t\x8a\x9d \x05\x45qual\x12\x10\n\x03NOT\x10\x15\x1a\x07\x8a\x9d \x03Not\x12\x1b\n\tLESS_THAN\x10\x16\x1a\x0c\x8a\x9d \x08LessThan\x12+\n\x12LESS_THAN_OR_EQUAL\x10\x17\x1a\x13\x8a\x9d \x0fLessThanOrEqual\x12!\n\x0cGREATER_THAN\x10\x18\x1a\x0f\x8a\x9d \x0bGreaterThan\x12\x31\n\x15GREATER_THAN_OR_EQUAL\x10\x19\x1a\x16\x8a\x9d \x12GreaterThanOrEqual\x12\x1c\n\tIDENTICAL\x10\x1a\x1a\r\x8a\x9d \tIdentical\x12\x1a\n\x08\x43ONTAINS\x10\x1b\x1a\x0c\x8a\x9d \x08\x43ontains\x12\x1c\n\tINCREMENT\x10\x1c\x1a\r\x8a\x9d \tIncrement\x12\x1c\n\tDECREMENT\x10\x1d\x1a\r\x8a\x9d \tDecrement\x12\x1a\n\x08NEGATIVE\x10\x1e\x1a\x0c\x8a\x9d \x08Negative\x12\x1a\n\x08POSITIVE\x10\x1f\x1a\x0c\x8a\x9d \x08Positive\x12 \n\x0b\x44\x45REFERENCE\x10 \x1a\x0f\x8a\x9d \x0b\x44\x65reference\x12!\n\x0cTAKE_ADDRESS\x10!\x1a\x0f\x8a\x9d \x0bTakeAddress\x12\x12\n\x04\x46ILE\x10\"\x1a\x08\x8a\x9d \x04\x46ile\x12\x10\n\x03\x41\x44\x44\x10#\x1a\x07\x8a\x9d \x03\x41\x64\x64\x12\x1c\n\tSUBSTRACT\x10$\x1a\r\x8a\x9d \tSubstract\x12\x1a\n\x08MULTIPLY\x10%\x1a\x0c\x8a\x9d \x08Multiply\x12\x16\n\x06\x44IVIDE\x10&\x1a\n\x8a\x9d \x06\x44ivide\x12\x16\n\x06MODULO\x10\'\x1a\n\x8a\x9d \x06Modulo\x12\x18\n\x07PACKAGE\x10(\x1a\x0b\x8a\x9d \x07Package\x12 \n\x0b\x44\x45\x43LARATION\x10)\x1a\x0f\x8a\x9d \x0b\x44\x65\x63laration\x12\x16\n\x06IMPORT\x10*\x1a\n\x8a\x9d \x06Import\x12\x1a\n\x08PATHNAME\x10+\x1a\x0c\x8a\x9d \x08Pathname\x12\x14\n\x05\x41LIAS\x10,\x1a\t\x8a\x9d \x05\x41lias\x12\x1a\n\x08\x46UNCTION\x10-\x1a\x0c\x8a\x9d \x08\x46unction\x12\x12\n\x04\x42ODY\x10.\x1a\x08\x8a\x9d \x04\x42ody\x12\x12\n\x04NAME\x10/\x1a\x08\x8a\x9d \x04Name\x12\x1a\n\x08RECEIVER\x10\x30\x1a\x0c\x8a\x9d \x08Receiver\x12\x1a\n\x08\x41RGUMENT\x10\x31\x1a\x0c\x8a\x9d \x08\x41rgument\x12\x14\n\x05VALUE\x10\x32\x1a\t\x8a\x9d \x05Value\x12\x1b\n\tARGS_LIST\x10\x33\x1a\x0c\x8a\x9d \x08\x41rgsList\x12\x12\n\x04\x42\x41SE\x10\x34\x1a\x08\x8a\x9d \x04\x42\x61se\x12\x1e\n\nIMPLEMENTS\x10\x35\x1a\x0e\x8a\x9d \nImplements\x12\x1a\n\x08INSTANCE\x10\x36\x1a\x0c\x8a\x9d \x08Instance\x12\x18\n\x07SUBTYPE\x10\x37\x1a\x0b\x8a\x9d \x07Subtype\x12\x1e\n\nSUBPACKAGE\x10\x38\x1a\x0e\x8a\x9d \nSubpackage\x12\x16\n\x06MODULE\x10\x39\x1a\n\x8a\x9d \x06Module\x12\x16\n\x06\x46RIEND\x10:\x1a\n\x8a\x9d \x06\x46riend\x12\x14\n\x05WORLD\x10;\x1a\t\x8a\x9d \x05World\x12\x0e\n\x02IF\x10<\x1a\x06\x8a\x9d \x02If\x12\x1c\n\tCONDITION\x10=\x1a\r\x8a\x9d \tCondition\x12\x12\n\x04THEN\x10>\x1a\x08\x8a\x9d \x04Then\x12\x12\n\x04\x45LSE\x10?\x1a\x08\x8a\x9d \x04\x45lse\x12\x16\n\x06SWITCH\x10@\x1a\n\x8a\x9d \x06Switch\x12\x12\n\x04\x43\x41SE\x10\x41\x1a\x08\x8a\x9d \x04\x43\x61se\x12\x18\n\x07\x44\x45\x46\x41ULT\x10\x42\x1a\x0b\x8a\x9d \x07\x44\x65\x66\x61ult\x12\x10\n\x03\x46OR\x10\x43\x1a\x07\x8a\x9d \x03\x46or\x12&\n\x0eINITIALIZATION\x10\x44\x1a\x12\x8a\x9d \x0eInitialization\x12\x16\n\x06UPDATE\x10\x45\x1a\n\x8a\x9d \x06Update\x12\x1a\n\x08ITERATOR\x10\x46\x1a\x0c\x8a\x9d \x08Iterator\x12\x14\n\x05WHILE\x10G\x1a\t\x8a\x9d \x05While\x12\x19\n\x08\x44O_WHILE\x10H\x1a\x0b\x8a\x9d \x07\x44oWhile\x12\x14\n\x05\x42REAK\x10I\x1a\t\x8a\x9d \x05\x42reak\x12\x1a\n\x08\x43ONTINUE\x10J\x1a\x0c\x8a\x9d \x08\x43ontinue\x12\x12\n\x04GOTO\x10K\x1a\x08\x8a\x9d \x04Goto\x12\x14\n\x05\x42LOCK\x10L\x1a\t\x8a\x9d \x05\x42lock\x12\x14\n\x05SCOPE\x10M\x1a\t\x8a\x9d \x05Scope\x12\x16\n\x06RETURN\x10N\x1a\n\x8a\x9d \x06Return\x12\x10\n\x03TRY\x10O\x1a\x07\x8a\x9d \x03Try\x12\x14\n\x05\x43\x41TCH\x10P\x1a\t\x8a\x9d \x05\x43\x61tch\x12\x18\n\x07\x46INALLY\x10Q\x1a\x0b\x8a\x9d \x07\x46inally\x12\x14\n\x05THROW\x10R\x1a\t\x8a\x9d \x05Throw\x12\x16\n\x06\x41SSERT\x10S\x1a\n\x8a\x9d \x06\x41ssert\x12\x12\n\x04\x43\x41LL\x10T\x1a\x08\x8a\x9d \x04\x43\x61ll\x12\x16\n\x06\x43\x41LLEE\x10U\x1a\n\x8a\x9d \x06\x43\x61llee\x12\x1e\n\nPOSITIONAL\x10V\x1a\x0e\x8a\x9d \nPositional\x12\x12\n\x04NOOP\x10W\x1a\x08\x8a\x9d \x04Noop\x12\x18\n\x07LITERAL\x10X\x1a\x0b\x8a\x9d \x07Literal\x12\x12\n\x04\x42YTE\x10Y\x1a\x08\x8a\x9d \x04\x42yte\x12\x1f\n\x0b\x42YTE_STRING\x10Z\x1a\x0e\x8a\x9d \nByteString\x12\x1c\n\tCHARACTER\x10[\x1a\r\x8a\x9d \tCharacter\x12\x12\n\x04LIST\x10\\\x1a\x08\x8a\x9d \x04List\x12\x10\n\x03MAP\x10]\x1a\x07\x8a\x9d \x03Map\x12\x12\n\x04NULL\x10^\x1a\x08\x8a\x9d \x04Null\x12\x16\n\x06NUMBER\x10_\x1a\n\x8a\x9d \x06Number\x12\x16\n\x06REGEXP\x10`\x1a\n\x8a\x9d \x06Regexp\x12\x10\n\x03SET\x10\x61\x1a\x07\x8a\x9d \x03Set\x12\x16\n\x06STRING\x10\x62\x1a\n\x8a\x9d \x06String\x12\x14\n\x05TUPLE\x10\x63\x1a\t\x8a\x9d \x05Tuple\x12\x12\n\x04TYPE\x10\x64\x1a\x08\x8a\x9d \x04Type\x12\x14\n\x05\x45NTRY\x10\x65\x1a\t\x8a\x9d \x05\x45ntry\x12\x10\n\x03KEY\x10\x66\x1a\x07\x8a\x9d \x03Key\x12\x1c\n\tPRIMITIVE\x10g\x1a\r\x8a\x9d \tPrimitive\x12\x1e\n\nASSIGNMENT\x10h\x1a\x0e\x8a\x9d \nAssignment\x12\x12\n\x04THIS\x10i\x1a\x08\x8a\x9d \x04This\x12\x18\n\x07\x43OMMENT\x10j\x1a\x0b\x8a\x9d \x07\x43omment\x12$\n\rDOCUMENTATION\x10k\x1a\x11\x8a\x9d \rDocumentation\x12\x1e\n\nWHITESPACE\x10l\x1a\x0e\x8a\x9d \nWhitespace\x12\x1e\n\nINCOMPLETE\x10m\x1a\x0e\x8a\x9d \nIncomplete\x12 \n\x0bUNANNOTATED\x10n\x1a\x0f\x8a\x9d \x0bUnannotated\x12\x1e\n\nVISIBILITY\x10o\x1a\x0e\x8a\x9d \nVisibility\x12\x1e\n\nANNOTATION\x10p\x1a\x0e\x8a\x9d \nAnnotation\x12\x1c\n\tANONYMOUS\x10q\x1a\r\x8a\x9d \tAnonymous\x12 \n\x0b\x45NUMERATION\x10r\x1a\x0f\x8a\x9d \x0b\x45numeration\x12\x1e\n\nARITHMETIC\x10s\x1a\x0e\x8a\x9d \nArithmetic\x12\x1e\n\nRELATIONAL\x10t\x1a\x0e\x8a\x9d \nRelational\x12\x1a\n\x08VARIABLE\x10u\x1a\x0c\x8a\x9d \x08Variable\x1a\x0c\xc0\xa4\x1e\x00\x88\xa3\x1e\x00\xa8\xa4\x1e\x00\x42%Z\x1bgopkg.in/bblfsh/sdk.v1/uast\xa0\xe3\x1e\x01\xe0\xe2\x1e\x00\x62\x06proto3')
  ,
  dependencies=[github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2.DESCRIPTOR,])

_ROLE = _descriptor.EnumDescriptor(
  name='Role',
  full_name='gopkg.in.bblfsh.sdk.v1.uast.Role',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Invalid')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IDENTIFIER', index=1, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nIdentifier')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='QUALIFIED', index=2, number=2,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tQualified')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR', index=3, number=3,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Operator')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BINARY', index=4, number=4,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Binary')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNARY', index=5, number=5,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Unary')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEFT', index=6, number=6,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Left')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIGHT', index=7, number=7,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Right')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INFIX', index=8, number=8,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Infix')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSTFIX', index=9, number=9,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Postfix')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BITWISE', index=10, number=10,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Bitwise')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOLEAN', index=11, number=11,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Boolean')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNSIGNED', index=12, number=12,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Unsigned')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEFT_SHIFT', index=13, number=13,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tLeftShift')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIGHT_SHIFT', index=14, number=14,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nRightShift')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OR', index=15, number=15,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \002Or')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='XOR', index=16, number=16,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Xor')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AND', index=17, number=17,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003And')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION', index=18, number=18,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nExpression')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATEMENT', index=19, number=19,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tStatement')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EQUAL', index=20, number=20,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Equal')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT', index=21, number=21,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Not')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LESS_THAN', index=22, number=22,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010LessThan')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LESS_THAN_OR_EQUAL', index=23, number=23,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \017LessThanOrEqual')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER_THAN', index=24, number=24,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013GreaterThan')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER_THAN_OR_EQUAL', index=25, number=25,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \022GreaterThanOrEqual')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IDENTICAL', index=26, number=26,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tIdentical')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTAINS', index=27, number=27,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Contains')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INCREMENT', index=28, number=28,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tIncrement')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECREMENT', index=29, number=29,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tDecrement')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATIVE', index=30, number=30,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Negative')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIVE', index=31, number=31,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Positive')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEREFERENCE', index=32, number=32,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Dereference')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TAKE_ADDRESS', index=33, number=33,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013TakeAddress')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE', index=34, number=34,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004File')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADD', index=35, number=35,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Add')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSTRACT', index=36, number=36,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tSubstract')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLY', index=37, number=37,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Multiply')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIVIDE', index=38, number=38,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Divide')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULO', index=39, number=39,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Modulo')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PACKAGE', index=40, number=40,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Package')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECLARATION', index=41, number=41,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Declaration')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPORT', index=42, number=42,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Import')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATHNAME', index=43, number=43,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Pathname')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALIAS', index=44, number=44,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Alias')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FUNCTION', index=45, number=45,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Function')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BODY', index=46, number=46,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Body')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAME', index=47, number=47,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Name')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECEIVER', index=48, number=48,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Receiver')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARGUMENT', index=49, number=49,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Argument')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE', index=50, number=50,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Value')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARGS_LIST', index=51, number=51,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010ArgsList')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BASE', index=52, number=52,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Base')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPLEMENTS', index=53, number=53,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nImplements')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INSTANCE', index=54, number=54,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Instance')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBTYPE', index=55, number=55,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Subtype')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBPACKAGE', index=56, number=56,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nSubpackage')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULE', index=57, number=57,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Module')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FRIEND', index=58, number=58,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Friend')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WORLD', index=59, number=59,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005World')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IF', index=60, number=60,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \002If')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONDITION', index=61, number=61,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tCondition')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='THEN', index=62, number=62,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Then')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ELSE', index=63, number=63,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Else')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SWITCH', index=64, number=64,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Switch')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CASE', index=65, number=65,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Case')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=66, number=66,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Default')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOR', index=67, number=67,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003For')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INITIALIZATION', index=68, number=68,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \016Initialization')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=69, number=69,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Update')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ITERATOR', index=70, number=70,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Iterator')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WHILE', index=71, number=71,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005While')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DO_WHILE', index=72, number=72,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007DoWhile')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BREAK', index=73, number=73,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Break')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTINUE', index=74, number=74,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Continue')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GOTO', index=75, number=75,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Goto')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOCK', index=76, number=76,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Block')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCOPE', index=77, number=77,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Scope')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RETURN', index=78, number=78,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Return')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRY', index=79, number=79,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Try')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CATCH', index=80, number=80,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Catch')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINALLY', index=81, number=81,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Finally')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='THROW', index=82, number=82,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Throw')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSERT', index=83, number=83,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Assert')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALL', index=84, number=84,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Call')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALLEE', index=85, number=85,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Callee')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITIONAL', index=86, number=86,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nPositional')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOOP', index=87, number=87,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Noop')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LITERAL', index=88, number=88,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Literal')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTE', index=89, number=89,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Byte')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTE_STRING', index=90, number=90,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nByteString')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHARACTER', index=91, number=91,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tCharacter')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIST', index=92, number=92,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004List')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAP', index=93, number=93,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Map')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NULL', index=94, number=94,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Null')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NUMBER', index=95, number=95,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Number')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGEXP', index=96, number=96,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Regexp')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET', index=97, number=97,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Set')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=98, number=98,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006String')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TUPLE', index=99, number=99,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Tuple')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TYPE', index=100, number=100,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Type')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTRY', index=101, number=101,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Entry')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KEY', index=102, number=102,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Key')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRIMITIVE', index=103, number=103,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tPrimitive')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSIGNMENT', index=104, number=104,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nAssignment')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='THIS', index=105, number=105,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004This')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMENT', index=106, number=106,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Comment')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOCUMENTATION', index=107, number=107,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \rDocumentation')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WHITESPACE', index=108, number=108,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nWhitespace')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INCOMPLETE', index=109, number=109,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nIncomplete')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNANNOTATED', index=110, number=110,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Unannotated')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VISIBILITY', index=111, number=111,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nVisibility')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANNOTATION', index=112, number=112,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nAnnotation')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANONYMOUS', index=113, number=113,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tAnonymous')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENUMERATION', index=114, number=114,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Enumeration')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ARITHMETIC', index=115, number=115,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nArithmetic')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RELATIONAL', index=116, number=116,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nRelational')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VARIABLE', index=117, number=117,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Variable')),
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\300\244\036\000\210\243\036\000\250\244\036\000')),
  serialized_start=599,
  serialized_end=3697,
)
_sym_db.RegisterEnumDescriptor(_ROLE)

Role = enum_type_wrapper.EnumTypeWrapper(_ROLE)
INVALID = 0
IDENTIFIER = 1
QUALIFIED = 2
OPERATOR = 3
BINARY = 4
UNARY = 5
LEFT = 6
RIGHT = 7
INFIX = 8
POSTFIX = 9
BITWISE = 10
BOOLEAN = 11
UNSIGNED = 12
LEFT_SHIFT = 13
RIGHT_SHIFT = 14
OR = 15
XOR = 16
AND = 17
EXPRESSION = 18
STATEMENT = 19
EQUAL = 20
NOT = 21
LESS_THAN = 22
LESS_THAN_OR_EQUAL = 23
GREATER_THAN = 24
GREATER_THAN_OR_EQUAL = 25
IDENTICAL = 26
CONTAINS = 27
INCREMENT = 28
DECREMENT = 29
NEGATIVE = 30
POSITIVE = 31
DEREFERENCE = 32
TAKE_ADDRESS = 33
FILE = 34
ADD = 35
SUBSTRACT = 36
MULTIPLY = 37
DIVIDE = 38
MODULO = 39
PACKAGE = 40
DECLARATION = 41
IMPORT = 42
PATHNAME = 43
ALIAS = 44
FUNCTION = 45
BODY = 46
NAME = 47
RECEIVER = 48
ARGUMENT = 49
VALUE = 50
ARGS_LIST = 51
BASE = 52
IMPLEMENTS = 53
INSTANCE = 54
SUBTYPE = 55
SUBPACKAGE = 56
MODULE = 57
FRIEND = 58
WORLD = 59
IF = 60
CONDITION = 61
THEN = 62
ELSE = 63
SWITCH = 64
CASE = 65
DEFAULT = 66
FOR = 67
INITIALIZATION = 68
UPDATE = 69
ITERATOR = 70
WHILE = 71
DO_WHILE = 72
BREAK = 73
CONTINUE = 74
GOTO = 75
BLOCK = 76
SCOPE = 77
RETURN = 78
TRY = 79
CATCH = 80
FINALLY = 81
THROW = 82
ASSERT = 83
CALL = 84
CALLEE = 85
POSITIONAL = 86
NOOP = 87
LITERAL = 88
BYTE = 89
BYTE_STRING = 90
CHARACTER = 91
LIST = 92
MAP = 93
NULL = 94
NUMBER = 95
REGEXP = 96
SET = 97
STRING = 98
TUPLE = 99
TYPE = 100
ENTRY = 101
KEY = 102
PRIMITIVE = 103
ASSIGNMENT = 104
THIS = 105
COMMENT = 106
DOCUMENTATION = 107
WHITESPACE = 108
INCOMPLETE = 109
UNANNOTATED = 110
VISIBILITY = 111
ANNOTATION = 112
ANONYMOUS = 113
ENUMERATION = 114
ARITHMETIC = 115
RELATIONAL = 116
VARIABLE = 117



_NODE_PROPERTIESENTRY = _descriptor.Descriptor(
  name='PropertiesEntry',
  full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.PropertiesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.PropertiesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.PropertiesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=468,
  serialized_end=517,
)

_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='gopkg.in.bblfsh.sdk.v1.uast.Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='internal_type', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.internal_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='properties', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.properties', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='children', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.children', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.token', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='start_position', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.start_position', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_position', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.end_position', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='roles', full_name='gopkg.in.bblfsh.sdk.v1.uast.Node.roles', index=6,
      number=7, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_NODE_PROPERTIESENTRY, ],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\240\037\000\230\240\037\000\360\241\037\000')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=124,
  serialized_end=531,
)


_POSITION = _descriptor.Descriptor(
  name='Position',
  full_name='gopkg.in.bblfsh.sdk.v1.uast.Position',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='gopkg.in.bblfsh.sdk.v1.uast.Position.offset', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='line', full_name='gopkg.in.bblfsh.sdk.v1.uast.Position.line', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='col', full_name='gopkg.in.bblfsh.sdk.v1.uast.Position.col', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\240\037\000\360\241\037\000')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=533,
  serialized_end=596,
)

_NODE_PROPERTIESENTRY.containing_type = _NODE
_NODE.fields_by_name['properties'].message_type = _NODE_PROPERTIESENTRY
_NODE.fields_by_name['children'].message_type = _NODE
_NODE.fields_by_name['start_position'].message_type = _POSITION
_NODE.fields_by_name['end_position'].message_type = _POSITION
_NODE.fields_by_name['roles'].enum_type = _ROLE
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['Position'] = _POSITION
DESCRIPTOR.enum_types_by_name['Role'] = _ROLE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(

  PropertiesEntry = _reflection.GeneratedProtocolMessageType('PropertiesEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODE_PROPERTIESENTRY,
    __module__ = 'gopkg.in.bblfsh.sdk.v1.uast.generated_pb2'
    # @@protoc_insertion_point(class_scope:gopkg.in.bblfsh.sdk.v1.uast.Node.PropertiesEntry)
    ))
  ,
  DESCRIPTOR = _NODE,
  __module__ = 'gopkg.in.bblfsh.sdk.v1.uast.generated_pb2'
  # @@protoc_insertion_point(class_scope:gopkg.in.bblfsh.sdk.v1.uast.Node)
  ))
_sym_db.RegisterMessage(Node)
_sym_db.RegisterMessage(Node.PropertiesEntry)

Position = _reflection.GeneratedProtocolMessageType('Position', (_message.Message,), dict(
  DESCRIPTOR = _POSITION,
  __module__ = 'gopkg.in.bblfsh.sdk.v1.uast.generated_pb2'
  # @@protoc_insertion_point(class_scope:gopkg.in.bblfsh.sdk.v1.uast.Position)
  ))
_sym_db.RegisterMessage(Position)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\033gopkg.in/bblfsh/sdk.v1/uast\240\343\036\001\340\342\036\000'))
_ROLE.has_options = True
_ROLE._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\300\244\036\000\210\243\036\000\250\244\036\000'))
_ROLE.values_by_name["INVALID"].has_options = True
_ROLE.values_by_name["INVALID"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Invalid'))
_ROLE.values_by_name["IDENTIFIER"].has_options = True
_ROLE.values_by_name["IDENTIFIER"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nIdentifier'))
_ROLE.values_by_name["QUALIFIED"].has_options = True
_ROLE.values_by_name["QUALIFIED"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tQualified'))
_ROLE.values_by_name["OPERATOR"].has_options = True
_ROLE.values_by_name["OPERATOR"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Operator'))
_ROLE.values_by_name["BINARY"].has_options = True
_ROLE.values_by_name["BINARY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Binary'))
_ROLE.values_by_name["UNARY"].has_options = True
_ROLE.values_by_name["UNARY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Unary'))
_ROLE.values_by_name["LEFT"].has_options = True
_ROLE.values_by_name["LEFT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Left'))
_ROLE.values_by_name["RIGHT"].has_options = True
_ROLE.values_by_name["RIGHT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Right'))
_ROLE.values_by_name["INFIX"].has_options = True
_ROLE.values_by_name["INFIX"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Infix'))
_ROLE.values_by_name["POSTFIX"].has_options = True
_ROLE.values_by_name["POSTFIX"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Postfix'))
_ROLE.values_by_name["BITWISE"].has_options = True
_ROLE.values_by_name["BITWISE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Bitwise'))
_ROLE.values_by_name["BOOLEAN"].has_options = True
_ROLE.values_by_name["BOOLEAN"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Boolean'))
_ROLE.values_by_name["UNSIGNED"].has_options = True
_ROLE.values_by_name["UNSIGNED"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Unsigned'))
_ROLE.values_by_name["LEFT_SHIFT"].has_options = True
_ROLE.values_by_name["LEFT_SHIFT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tLeftShift'))
_ROLE.values_by_name["RIGHT_SHIFT"].has_options = True
_ROLE.values_by_name["RIGHT_SHIFT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nRightShift'))
_ROLE.values_by_name["OR"].has_options = True
_ROLE.values_by_name["OR"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \002Or'))
_ROLE.values_by_name["XOR"].has_options = True
_ROLE.values_by_name["XOR"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Xor'))
_ROLE.values_by_name["AND"].has_options = True
_ROLE.values_by_name["AND"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003And'))
_ROLE.values_by_name["EXPRESSION"].has_options = True
_ROLE.values_by_name["EXPRESSION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nExpression'))
_ROLE.values_by_name["STATEMENT"].has_options = True
_ROLE.values_by_name["STATEMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tStatement'))
_ROLE.values_by_name["EQUAL"].has_options = True
_ROLE.values_by_name["EQUAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Equal'))
_ROLE.values_by_name["NOT"].has_options = True
_ROLE.values_by_name["NOT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Not'))
_ROLE.values_by_name["LESS_THAN"].has_options = True
_ROLE.values_by_name["LESS_THAN"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010LessThan'))
_ROLE.values_by_name["LESS_THAN_OR_EQUAL"].has_options = True
_ROLE.values_by_name["LESS_THAN_OR_EQUAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \017LessThanOrEqual'))
_ROLE.values_by_name["GREATER_THAN"].has_options = True
_ROLE.values_by_name["GREATER_THAN"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013GreaterThan'))
_ROLE.values_by_name["GREATER_THAN_OR_EQUAL"].has_options = True
_ROLE.values_by_name["GREATER_THAN_OR_EQUAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \022GreaterThanOrEqual'))
_ROLE.values_by_name["IDENTICAL"].has_options = True
_ROLE.values_by_name["IDENTICAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tIdentical'))
_ROLE.values_by_name["CONTAINS"].has_options = True
_ROLE.values_by_name["CONTAINS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Contains'))
_ROLE.values_by_name["INCREMENT"].has_options = True
_ROLE.values_by_name["INCREMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tIncrement'))
_ROLE.values_by_name["DECREMENT"].has_options = True
_ROLE.values_by_name["DECREMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tDecrement'))
_ROLE.values_by_name["NEGATIVE"].has_options = True
_ROLE.values_by_name["NEGATIVE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Negative'))
_ROLE.values_by_name["POSITIVE"].has_options = True
_ROLE.values_by_name["POSITIVE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Positive'))
_ROLE.values_by_name["DEREFERENCE"].has_options = True
_ROLE.values_by_name["DEREFERENCE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Dereference'))
_ROLE.values_by_name["TAKE_ADDRESS"].has_options = True
_ROLE.values_by_name["TAKE_ADDRESS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013TakeAddress'))
_ROLE.values_by_name["FILE"].has_options = True
_ROLE.values_by_name["FILE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004File'))
_ROLE.values_by_name["ADD"].has_options = True
_ROLE.values_by_name["ADD"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Add'))
_ROLE.values_by_name["SUBSTRACT"].has_options = True
_ROLE.values_by_name["SUBSTRACT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tSubstract'))
_ROLE.values_by_name["MULTIPLY"].has_options = True
_ROLE.values_by_name["MULTIPLY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Multiply'))
_ROLE.values_by_name["DIVIDE"].has_options = True
_ROLE.values_by_name["DIVIDE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Divide'))
_ROLE.values_by_name["MODULO"].has_options = True
_ROLE.values_by_name["MODULO"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Modulo'))
_ROLE.values_by_name["PACKAGE"].has_options = True
_ROLE.values_by_name["PACKAGE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Package'))
_ROLE.values_by_name["DECLARATION"].has_options = True
_ROLE.values_by_name["DECLARATION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Declaration'))
_ROLE.values_by_name["IMPORT"].has_options = True
_ROLE.values_by_name["IMPORT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Import'))
_ROLE.values_by_name["PATHNAME"].has_options = True
_ROLE.values_by_name["PATHNAME"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Pathname'))
_ROLE.values_by_name["ALIAS"].has_options = True
_ROLE.values_by_name["ALIAS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Alias'))
_ROLE.values_by_name["FUNCTION"].has_options = True
_ROLE.values_by_name["FUNCTION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Function'))
_ROLE.values_by_name["BODY"].has_options = True
_ROLE.values_by_name["BODY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Body'))
_ROLE.values_by_name["NAME"].has_options = True
_ROLE.values_by_name["NAME"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Name'))
_ROLE.values_by_name["RECEIVER"].has_options = True
_ROLE.values_by_name["RECEIVER"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Receiver'))
_ROLE.values_by_name["ARGUMENT"].has_options = True
_ROLE.values_by_name["ARGUMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Argument'))
_ROLE.values_by_name["VALUE"].has_options = True
_ROLE.values_by_name["VALUE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Value'))
_ROLE.values_by_name["ARGS_LIST"].has_options = True
_ROLE.values_by_name["ARGS_LIST"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010ArgsList'))
_ROLE.values_by_name["BASE"].has_options = True
_ROLE.values_by_name["BASE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Base'))
_ROLE.values_by_name["IMPLEMENTS"].has_options = True
_ROLE.values_by_name["IMPLEMENTS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nImplements'))
_ROLE.values_by_name["INSTANCE"].has_options = True
_ROLE.values_by_name["INSTANCE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Instance'))
_ROLE.values_by_name["SUBTYPE"].has_options = True
_ROLE.values_by_name["SUBTYPE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Subtype'))
_ROLE.values_by_name["SUBPACKAGE"].has_options = True
_ROLE.values_by_name["SUBPACKAGE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nSubpackage'))
_ROLE.values_by_name["MODULE"].has_options = True
_ROLE.values_by_name["MODULE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Module'))
_ROLE.values_by_name["FRIEND"].has_options = True
_ROLE.values_by_name["FRIEND"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Friend'))
_ROLE.values_by_name["WORLD"].has_options = True
_ROLE.values_by_name["WORLD"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005World'))
_ROLE.values_by_name["IF"].has_options = True
_ROLE.values_by_name["IF"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \002If'))
_ROLE.values_by_name["CONDITION"].has_options = True
_ROLE.values_by_name["CONDITION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tCondition'))
_ROLE.values_by_name["THEN"].has_options = True
_ROLE.values_by_name["THEN"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Then'))
_ROLE.values_by_name["ELSE"].has_options = True
_ROLE.values_by_name["ELSE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Else'))
_ROLE.values_by_name["SWITCH"].has_options = True
_ROLE.values_by_name["SWITCH"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Switch'))
_ROLE.values_by_name["CASE"].has_options = True
_ROLE.values_by_name["CASE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Case'))
_ROLE.values_by_name["DEFAULT"].has_options = True
_ROLE.values_by_name["DEFAULT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Default'))
_ROLE.values_by_name["FOR"].has_options = True
_ROLE.values_by_name["FOR"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003For'))
_ROLE.values_by_name["INITIALIZATION"].has_options = True
_ROLE.values_by_name["INITIALIZATION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \016Initialization'))
_ROLE.values_by_name["UPDATE"].has_options = True
_ROLE.values_by_name["UPDATE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Update'))
_ROLE.values_by_name["ITERATOR"].has_options = True
_ROLE.values_by_name["ITERATOR"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Iterator'))
_ROLE.values_by_name["WHILE"].has_options = True
_ROLE.values_by_name["WHILE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005While'))
_ROLE.values_by_name["DO_WHILE"].has_options = True
_ROLE.values_by_name["DO_WHILE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007DoWhile'))
_ROLE.values_by_name["BREAK"].has_options = True
_ROLE.values_by_name["BREAK"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Break'))
_ROLE.values_by_name["CONTINUE"].has_options = True
_ROLE.values_by_name["CONTINUE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Continue'))
_ROLE.values_by_name["GOTO"].has_options = True
_ROLE.values_by_name["GOTO"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Goto'))
_ROLE.values_by_name["BLOCK"].has_options = True
_ROLE.values_by_name["BLOCK"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Block'))
_ROLE.values_by_name["SCOPE"].has_options = True
_ROLE.values_by_name["SCOPE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Scope'))
_ROLE.values_by_name["RETURN"].has_options = True
_ROLE.values_by_name["RETURN"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Return'))
_ROLE.values_by_name["TRY"].has_options = True
_ROLE.values_by_name["TRY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Try'))
_ROLE.values_by_name["CATCH"].has_options = True
_ROLE.values_by_name["CATCH"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Catch'))
_ROLE.values_by_name["FINALLY"].has_options = True
_ROLE.values_by_name["FINALLY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Finally'))
_ROLE.values_by_name["THROW"].has_options = True
_ROLE.values_by_name["THROW"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Throw'))
_ROLE.values_by_name["ASSERT"].has_options = True
_ROLE.values_by_name["ASSERT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Assert'))
_ROLE.values_by_name["CALL"].has_options = True
_ROLE.values_by_name["CALL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Call'))
_ROLE.values_by_name["CALLEE"].has_options = True
_ROLE.values_by_name["CALLEE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Callee'))
_ROLE.values_by_name["POSITIONAL"].has_options = True
_ROLE.values_by_name["POSITIONAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nPositional'))
_ROLE.values_by_name["NOOP"].has_options = True
_ROLE.values_by_name["NOOP"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Noop'))
_ROLE.values_by_name["LITERAL"].has_options = True
_ROLE.values_by_name["LITERAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Literal'))
_ROLE.values_by_name["BYTE"].has_options = True
_ROLE.values_by_name["BYTE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Byte'))
_ROLE.values_by_name["BYTE_STRING"].has_options = True
_ROLE.values_by_name["BYTE_STRING"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nByteString'))
_ROLE.values_by_name["CHARACTER"].has_options = True
_ROLE.values_by_name["CHARACTER"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tCharacter'))
_ROLE.values_by_name["LIST"].has_options = True
_ROLE.values_by_name["LIST"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004List'))
_ROLE.values_by_name["MAP"].has_options = True
_ROLE.values_by_name["MAP"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Map'))
_ROLE.values_by_name["NULL"].has_options = True
_ROLE.values_by_name["NULL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Null'))
_ROLE.values_by_name["NUMBER"].has_options = True
_ROLE.values_by_name["NUMBER"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Number'))
_ROLE.values_by_name["REGEXP"].has_options = True
_ROLE.values_by_name["REGEXP"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006Regexp'))
_ROLE.values_by_name["SET"].has_options = True
_ROLE.values_by_name["SET"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Set'))
_ROLE.values_by_name["STRING"].has_options = True
_ROLE.values_by_name["STRING"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \006String'))
_ROLE.values_by_name["TUPLE"].has_options = True
_ROLE.values_by_name["TUPLE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Tuple'))
_ROLE.values_by_name["TYPE"].has_options = True
_ROLE.values_by_name["TYPE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004Type'))
_ROLE.values_by_name["ENTRY"].has_options = True
_ROLE.values_by_name["ENTRY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \005Entry'))
_ROLE.values_by_name["KEY"].has_options = True
_ROLE.values_by_name["KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \003Key'))
_ROLE.values_by_name["PRIMITIVE"].has_options = True
_ROLE.values_by_name["PRIMITIVE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tPrimitive'))
_ROLE.values_by_name["ASSIGNMENT"].has_options = True
_ROLE.values_by_name["ASSIGNMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nAssignment'))
_ROLE.values_by_name["THIS"].has_options = True
_ROLE.values_by_name["THIS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \004This'))
_ROLE.values_by_name["COMMENT"].has_options = True
_ROLE.values_by_name["COMMENT"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \007Comment'))
_ROLE.values_by_name["DOCUMENTATION"].has_options = True
_ROLE.values_by_name["DOCUMENTATION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \rDocumentation'))
_ROLE.values_by_name["WHITESPACE"].has_options = True
_ROLE.values_by_name["WHITESPACE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nWhitespace'))
_ROLE.values_by_name["INCOMPLETE"].has_options = True
_ROLE.values_by_name["INCOMPLETE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nIncomplete'))
_ROLE.values_by_name["UNANNOTATED"].has_options = True
_ROLE.values_by_name["UNANNOTATED"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Unannotated'))
_ROLE.values_by_name["VISIBILITY"].has_options = True
_ROLE.values_by_name["VISIBILITY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nVisibility'))
_ROLE.values_by_name["ANNOTATION"].has_options = True
_ROLE.values_by_name["ANNOTATION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nAnnotation'))
_ROLE.values_by_name["ANONYMOUS"].has_options = True
_ROLE.values_by_name["ANONYMOUS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \tAnonymous'))
_ROLE.values_by_name["ENUMERATION"].has_options = True
_ROLE.values_by_name["ENUMERATION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \013Enumeration'))
_ROLE.values_by_name["ARITHMETIC"].has_options = True
_ROLE.values_by_name["ARITHMETIC"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nArithmetic'))
_ROLE.values_by_name["RELATIONAL"].has_options = True
_ROLE.values_by_name["RELATIONAL"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \nRelational'))
_ROLE.values_by_name["VARIABLE"].has_options = True
_ROLE.values_by_name["VARIABLE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\235 \010Variable'))
_NODE_PROPERTIESENTRY.has_options = True
_NODE_PROPERTIESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODE.has_options = True
_NODE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\240\037\000\230\240\037\000\360\241\037\000'))
_POSITION.has_options = True
_POSITION._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\210\240\037\000\360\241\037\000'))
# @@protoc_insertion_point(module_scope)
