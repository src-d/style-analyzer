# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from lookout.core.api import event_pb2 as lookout_dot_core_dot_api_dot_event__pb2
from lookout.core.api import service_analyzer_pb2 as lookout_dot_core_dot_api_dot_service__analyzer__pb2


class AnalyzerStub(object):
  """Analyzer service should be implemented by analyzers to receive events from
  the server. It is currently implemented as a single long-lived request, so
  cancellation is managed at gRPC level. Depending on how we plan to implement
  the server, we might want to implement sending results as a callback. For
  now, this is kept simple.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NotifyReviewEvent = channel.unary_unary(
        '/pb.Analyzer/NotifyReviewEvent',
        request_serializer=lookout_dot_core_dot_api_dot_event__pb2.ReviewEvent.SerializeToString,
        response_deserializer=lookout_dot_core_dot_api_dot_service__analyzer__pb2.EventResponse.FromString,
        )
    self.NotifyPushEvent = channel.unary_unary(
        '/pb.Analyzer/NotifyPushEvent',
        request_serializer=lookout_dot_core_dot_api_dot_event__pb2.PushEvent.SerializeToString,
        response_deserializer=lookout_dot_core_dot_api_dot_service__analyzer__pb2.EventResponse.FromString,
        )


class AnalyzerServicer(object):
  """Analyzer service should be implemented by analyzers to receive events from
  the server. It is currently implemented as a single long-lived request, so
  cancellation is managed at gRPC level. Depending on how we plan to implement
  the server, we might want to implement sending results as a callback. For
  now, this is kept simple.
  """

  def NotifyReviewEvent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NotifyPushEvent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalyzerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NotifyReviewEvent': grpc.unary_unary_rpc_method_handler(
          servicer.NotifyReviewEvent,
          request_deserializer=lookout_dot_core_dot_api_dot_event__pb2.ReviewEvent.FromString,
          response_serializer=lookout_dot_core_dot_api_dot_service__analyzer__pb2.EventResponse.SerializeToString,
      ),
      'NotifyPushEvent': grpc.unary_unary_rpc_method_handler(
          servicer.NotifyPushEvent,
          request_deserializer=lookout_dot_core_dot_api_dot_event__pb2.PushEvent.FromString,
          response_serializer=lookout_dot_core_dot_api_dot_service__analyzer__pb2.EventResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Analyzer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
